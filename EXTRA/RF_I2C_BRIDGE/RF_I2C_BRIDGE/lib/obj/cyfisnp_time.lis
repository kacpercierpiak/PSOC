                        .module cyfisnp_time.c
                        .area text(rom, con, rel)
 0000                   .dbfile lib/cyfisnp_time.c
 0000                   .dbfile D:\Studia\PSOC\RF_I2C_BRIDGE\RF_I2C_BRIDGE\lib\cyfisnp_time.c
 0000                   .dbfunc e CYFISNP_TimeSet _CYFISNP_TimeSet fV
 0000           ;        tmpTime -> X+0
 0000           ;           time -> X-7
 0000           ;         pTimer -> X-5
 0000           _CYFISNP_TimeSet::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3802              add SP,2
 0004                   .dbline 50
 0004           ; //*****************************************************************************
 0004           ; //*****************************************************************************
 0004           ; //  FILENAME: CYFISNP_Time.c
 0004           ; //  Version: 2.00, Updated on 2015/3/4 at 22:21:19
 0004           ; //  Generated by PSoC Designer 5.4.3191
 0004           ; //
 0004           ; //  DESCRIPTION: <NODE> Star Network Protocol Protocol Time routines
 0004           ; //-----------------------------------------------------------------------------
 0004           ; //  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
 0004           ; //*****************************************************************************
 0004           ; //*****************************************************************************
 0004           ; 
 0004           ; #include <m8c.h>
 0004           ; #include "CYFISNP_Time.h"
 0004           ; #include "CYFISNP_Config.h"
 0004           ; 
 0004           ; #if (CYFISNP_PSOC_EXPRESS_PROJECT)
 0004           ;     #include "SystemTimer.h"
 0004           ;     extern WORD SystemTimer_TickCount;
 0004           ; #else
 0004           ;     //#include "SleepTimer.h"
 0004           ;     extern WORD SleepTimer_TickCount;
 0004           ; #endif
 0004           ; 
 0004           ; 
 0004           ; // ---------------------------------------------------------------------------
 0004           ; // SleepTimer_TickCount = free-running 16-bit incrementing Tick counter from
 0004           ; //                         SleepTimer User Module.
 0004           ; // ---------------------------------------------------------------------------
 0004           ; 
 0004           ; 
 0004           ; // ---------------------------------------------------------------------------
 0004           ; //
 0004           ; // CYFISNP_TimeSet()     -  Set caller's timer for polling
 0004           ; // CYFISNP_TimeExpired() - Poll caller's timer
 0004           ; //
 0004           ; // ---------------------------------------------------------------------------
 0004           ; 
 0004           ; 
 0004           ; // ---------------------------------------------------------------------------
 0004           ; // This specifies a decrementing Tick Counter instead of incrementing
 0004           ; // ---------------------------------------------------------------------------
 0004           ; //#define SYSTIMER_DECREMENTS
 0004           ; 
 0004           ; 
 0004           ;     void
 0004           ; CYFISNP_TimeSet(
 0004           ;     WORD *pTimer,           // Ptr to store expiration time
 0004           ;     WORD time               // 32767 counts maximum
 0004           ;     ) {                     // -----------------------------------------------
 0004                   .dbline 52
 0004           ;     WORD tmpTime;
 0004           ;     M8C_DisableIntMask(INT_MSK0, INT_MSK0_SLEEP);
 0004 41E0BF            and REG[0xe0],-65
 0007                   .dbline 56
 0007           ; #if (CYFISNP_PSOC_EXPRESS_PROJECT)
 0007           ;     tmpTime = SystemTimer_TickCount;
 0007           ; #else
 0007           ;     tmpTime = SleepTimer_TickCount;
 0007 5101              mov A,[_SleepTimer_TickCount+1]
 0009 5401              mov [X+1],A
 000B 5100              mov A,[_SleepTimer_TickCount]
 000D 5400              mov [X+0],A
 000F                   .dbline 58
 000F           ; #endif
 000F           ;     M8C_EnableIntMask(INT_MSK0, INT_MSK0_SLEEP);
 000F 43E040            or REG[0xe0],64
 0012                   .dbline 62
 0012           ; #ifdef SYSTIMER_DECREMENTS      // free-running Timer decrements
 0012           ;     *pTimer = tmpTime - time;
 0012           ; #else                           // CYFISNP_SysTimer16 increments
 0012           ;     *pTimer = tmpTime + time;
 0012 5201              mov A,[X+1]
 0014 03FA              add A,[X-6]
 0016 5300              mov [__r1],A
 0018 5200              mov A,[X+0]
 001A 0BF9              adc A,[X-7]
 001C 5300              mov [__r0],A
 001E 52FC              mov A,[X-4]
 0020 5300              mov [__r3],A
 0022 5100              mov A,[__r0]
 0024 3F00              mvi [__r3],A
 0026 5100              mov A,[__r1]
 0028 3F00              mvi [__r3],A
 002A                   .dbline -2
 002A           L1:
 002A 38FE              add SP,-2
 002C 20                pop X
 002D                   .dbline 0 ; func end
 002D 7F                ret
 002E                   .dbsym l tmpTime 0 i
 002E                   .dbsym l time -7 i
 002E                   .dbsym l pTimer -5 pi
 002E                   .dbend
 002E                   .dbfunc e CYFISNP_TimeExpired _CYFISNP_TimeExpired fc
 002E           ;        tmpTime -> X+0
 002E           ;         pTimer -> X-5
 002E           _CYFISNP_TimeExpired::
 002E                   .dbline -1
 002E 10                push X
 002F 4F                mov X,SP
 0030 3802              add SP,2
 0032                   .dbline 69
 0032           ; #endif
 0032           ; 
 0032           ; }
 0032           ;     BOOL                    // Ret TRUE if expired
 0032           ; CYFISNP_TimeExpired(
 0032           ;     WORD *pTimer            // ptr to expiration time
 0032           ;     ) {                     // -----------------------------------------------
 0032                   .dbline 71
 0032           ;     WORD tmpTime;
 0032           ;     M8C_DisableIntMask(INT_MSK0, INT_MSK0_SLEEP);
 0032 41E0BF            and REG[0xe0],-65
 0035                   .dbline 75
 0035           ; #if (CYFISNP_PSOC_EXPRESS_PROJECT)
 0035           ;     tmpTime = SystemTimer_TickCount;
 0035           ; #else
 0035           ;     tmpTime = SleepTimer_TickCount;
 0035 5101              mov A,[_SleepTimer_TickCount+1]
 0037 5401              mov [X+1],A
 0039 5100              mov A,[_SleepTimer_TickCount]
 003B 5400              mov [X+0],A
 003D                   .dbline 77
 003D           ; #endif
 003D           ;     M8C_EnableIntMask(INT_MSK0, INT_MSK0_SLEEP);
 003D 43E040            or REG[0xe0],64
 0040                   .dbline 81
 0040           ; #ifdef SYSTIMER_DECREMENTS
 0040           ;     tmpTime = tmpTime - *pTimer;
 0040           ; #else
 0040           ;     tmpTime = *pTimer - tmpTime;
 0040 52FC              mov A,[X-4]
 0042 5300              mov [__r1],A
 0044 3E00              mvi A,[__r1]
 0046 5300              mov [__r0],A
 0048 3E00              mvi A,[__r1]
 004A 1301              sub A,[X+1]
 004C 5401              mov [X+1],A
 004E 5100              mov A,[__r0]
 0050 1B00              sbb A,[X+0]
 0052 5400              mov [X+0],A
 0054                   .dbline 83
 0054           ; #endif
 0054           ;     if (((BYTE)(tmpTime>>8)&0x80) == 0)     return FALSE;   // not expired
 0054 5200              mov A,[X+0]
 0056 5300              mov [__r0],A
 0058 470080            tst [__r0],-128
 005B B005              jnz L3
 005D                   .dbline 83
 005D 5000              mov A,0
 005F 8003              xjmp L2
 0061           L3:
 0061                   .dbline 84
 0061           ;     else                                    return TRUE;    // expired
 0061 5001              mov A,1
 0063                   .dbline -2
 0063           L2:
 0063 38FE              add SP,-2
 0065 20                pop X
 0066                   .dbline 0 ; func end
 0066 7F                ret
 0067                   .dbsym l tmpTime 0 i
 0067                   .dbsym l pTimer -5 pi
 0067                   .dbend

;  Generated by PSoC Designer 5.1.2306
;
; ChipSelect address and mask equates
ChipSelect_Data_ADDR:	equ	0h
ChipSelect_DriveMode_0_ADDR:	equ	100h
ChipSelect_DriveMode_1_ADDR:	equ	101h
ChipSelect_DriveMode_2_ADDR:	equ	3h
ChipSelect_GlobalSelect_ADDR:	equ	2h
ChipSelect_IntCtrl_0_ADDR:	equ	102h
ChipSelect_IntCtrl_1_ADDR:	equ	103h
ChipSelect_IntEn_ADDR:	equ	1h
ChipSelect_MASK:	equ	4h
; DataReady address and mask equates
DataReady_Data_ADDR:	equ	0h
DataReady_DriveMode_0_ADDR:	equ	100h
DataReady_DriveMode_1_ADDR:	equ	101h
DataReady_DriveMode_2_ADDR:	equ	3h
DataReady_GlobalSelect_ADDR:	equ	2h
DataReady_IntCtrl_0_ADDR:	equ	102h
DataReady_IntCtrl_1_ADDR:	equ	103h
DataReady_IntEn_ADDR:	equ	1h
DataReady_MASK:	equ	8h
; RedLED address and mask equates
RedLED_Data_ADDR:	equ	4h
RedLED_DriveMode_0_ADDR:	equ	104h
RedLED_DriveMode_1_ADDR:	equ	105h
RedLED_DriveMode_2_ADDR:	equ	7h
RedLED_GlobalSelect_ADDR:	equ	6h
RedLED_IntCtrl_0_ADDR:	equ	106h
RedLED_IntCtrl_1_ADDR:	equ	107h
RedLED_IntEn_ADDR:	equ	5h
RedLED_MASK:	equ	4h
; GreenLED address and mask equates
GreenLED_Data_ADDR:	equ	4h
GreenLED_DriveMode_0_ADDR:	equ	104h
GreenLED_DriveMode_1_ADDR:	equ	105h
GreenLED_DriveMode_2_ADDR:	equ	7h
GreenLED_GlobalSelect_ADDR:	equ	6h
GreenLED_IntCtrl_0_ADDR:	equ	106h
GreenLED_IntCtrl_1_ADDR:	equ	107h
GreenLED_IntEn_ADDR:	equ	5h
GreenLED_MASK:	equ	8h
; SW2 address and mask equates
SW2_Data_ADDR:	equ	4h
SW2_DriveMode_0_ADDR:	equ	104h
SW2_DriveMode_1_ADDR:	equ	105h
SW2_DriveMode_2_ADDR:	equ	7h
SW2_GlobalSelect_ADDR:	equ	6h
SW2_IntCtrl_0_ADDR:	equ	106h
SW2_IntCtrl_1_ADDR:	equ	107h
SW2_IntEn_ADDR:	equ	5h
SW2_MASK:	equ	10h
; I2CSDA address and mask equates
I2CSDA_Data_ADDR:	equ	4h
I2CSDA_DriveMode_0_ADDR:	equ	104h
I2CSDA_DriveMode_1_ADDR:	equ	105h
I2CSDA_DriveMode_2_ADDR:	equ	7h
I2CSDA_GlobalSelect_ADDR:	equ	6h
I2CSDA_IntCtrl_0_ADDR:	equ	106h
I2CSDA_IntCtrl_1_ADDR:	equ	107h
I2CSDA_IntEn_ADDR:	equ	5h
I2CSDA_MASK:	equ	20h
; SW1 address and mask equates
SW1_Data_ADDR:	equ	4h
SW1_DriveMode_0_ADDR:	equ	104h
SW1_DriveMode_1_ADDR:	equ	105h
SW1_DriveMode_2_ADDR:	equ	7h
SW1_GlobalSelect_ADDR:	equ	6h
SW1_IntCtrl_0_ADDR:	equ	106h
SW1_IntCtrl_1_ADDR:	equ	107h
SW1_IntEn_ADDR:	equ	5h
SW1_MASK:	equ	40h
; I2CSCL address and mask equates
I2CSCL_Data_ADDR:	equ	4h
I2CSCL_DriveMode_0_ADDR:	equ	104h
I2CSCL_DriveMode_1_ADDR:	equ	105h
I2CSCL_DriveMode_2_ADDR:	equ	7h
I2CSCL_GlobalSelect_ADDR:	equ	6h
I2CSCL_IntCtrl_0_ADDR:	equ	106h
I2CSCL_IntCtrl_1_ADDR:	equ	107h
I2CSCL_IntEn_ADDR:	equ	5h
I2CSCL_MASK:	equ	80h
; LP_MISO address and mask equates
LP_MISO_Data_ADDR:	equ	8h
LP_MISO_DriveMode_0_ADDR:	equ	108h
LP_MISO_DriveMode_1_ADDR:	equ	109h
LP_MISO_DriveMode_2_ADDR:	equ	bh
LP_MISO_GlobalSelect_ADDR:	equ	ah
LP_MISO_IntCtrl_0_ADDR:	equ	10ah
LP_MISO_IntCtrl_1_ADDR:	equ	10bh
LP_MISO_IntEn_ADDR:	equ	9h
LP_MISO_MASK:	equ	1h
; LP_MISO_Data access macros
;   GetLP_MISO_Data macro, return in a
macro GetLP_MISO_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 1h
endm
;   SetLP_MISO_Data macro
macro SetLP_MISO_Data
	or		[Port_2_Data_SHADE], 1h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LP_MISO_Data_ADDR], a
endm
;   ClearLP_MISO_Data macro
macro ClearLP_MISO_Data
	and		[Port_2_Data_SHADE], ~1h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LP_MISO_Data_ADDR], a
endm

; LP_SCK address and mask equates
LP_SCK_Data_ADDR:	equ	8h
LP_SCK_DriveMode_0_ADDR:	equ	108h
LP_SCK_DriveMode_1_ADDR:	equ	109h
LP_SCK_DriveMode_2_ADDR:	equ	bh
LP_SCK_GlobalSelect_ADDR:	equ	ah
LP_SCK_IntCtrl_0_ADDR:	equ	10ah
LP_SCK_IntCtrl_1_ADDR:	equ	10bh
LP_SCK_IntEn_ADDR:	equ	9h
LP_SCK_MASK:	equ	8h
; LP_SCK_Data access macros
;   GetLP_SCK_Data macro, return in a
macro GetLP_SCK_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 8h
endm
;   SetLP_SCK_Data macro
macro SetLP_SCK_Data
	or		[Port_2_Data_SHADE], 8h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LP_SCK_Data_ADDR], a
endm
;   ClearLP_SCK_Data macro
macro ClearLP_SCK_Data
	and		[Port_2_Data_SHADE], ~8h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LP_SCK_Data_ADDR], a
endm

; LP_MOSI address and mask equates
LP_MOSI_Data_ADDR:	equ	8h
LP_MOSI_DriveMode_0_ADDR:	equ	108h
LP_MOSI_DriveMode_1_ADDR:	equ	109h
LP_MOSI_DriveMode_2_ADDR:	equ	bh
LP_MOSI_GlobalSelect_ADDR:	equ	ah
LP_MOSI_IntCtrl_0_ADDR:	equ	10ah
LP_MOSI_IntCtrl_1_ADDR:	equ	10bh
LP_MOSI_IntEn_ADDR:	equ	9h
LP_MOSI_MASK:	equ	20h
; LP_MOSI_Data access macros
;   GetLP_MOSI_Data macro, return in a
macro GetLP_MOSI_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 20h
endm
;   SetLP_MOSI_Data macro
macro SetLP_MOSI_Data
	or		[Port_2_Data_SHADE], 20h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LP_MOSI_Data_ADDR], a
endm
;   ClearLP_MOSI_Data macro
macro ClearLP_MOSI_Data
	and		[Port_2_Data_SHADE], ~20h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LP_MOSI_Data_ADDR], a
endm

; CYFISNP_IRQ address and mask equates
CYFISNP_IRQ_Data_ADDR:	equ	8h
CYFISNP_IRQ_DriveMode_0_ADDR:	equ	108h
CYFISNP_IRQ_DriveMode_1_ADDR:	equ	109h
CYFISNP_IRQ_DriveMode_2_ADDR:	equ	bh
CYFISNP_IRQ_GlobalSelect_ADDR:	equ	ah
CYFISNP_IRQ_IntCtrl_0_ADDR:	equ	10ah
CYFISNP_IRQ_IntCtrl_1_ADDR:	equ	10bh
CYFISNP_IRQ_IntEn_ADDR:	equ	9h
CYFISNP_IRQ_MASK:	equ	40h
; CYFISNP_IRQ_Data access macros
;   GetCYFISNP_IRQ_Data macro, return in a
macro GetCYFISNP_IRQ_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 40h
endm
;   SetCYFISNP_IRQ_Data macro
macro SetCYFISNP_IRQ_Data
	or		[Port_2_Data_SHADE], 40h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[CYFISNP_IRQ_Data_ADDR], a
endm
;   ClearCYFISNP_IRQ_Data macro
macro ClearCYFISNP_IRQ_Data
	and		[Port_2_Data_SHADE], ~40h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[CYFISNP_IRQ_Data_ADDR], a
endm

; CYFISNP_nSS address and mask equates
CYFISNP_nSS_Data_ADDR:	equ	8h
CYFISNP_nSS_DriveMode_0_ADDR:	equ	108h
CYFISNP_nSS_DriveMode_1_ADDR:	equ	109h
CYFISNP_nSS_DriveMode_2_ADDR:	equ	bh
CYFISNP_nSS_GlobalSelect_ADDR:	equ	ah
CYFISNP_nSS_IntCtrl_0_ADDR:	equ	10ah
CYFISNP_nSS_IntCtrl_1_ADDR:	equ	10bh
CYFISNP_nSS_IntEn_ADDR:	equ	9h
CYFISNP_nSS_MASK:	equ	80h
; CYFISNP_nSS_Data access macros
;   GetCYFISNP_nSS_Data macro, return in a
macro GetCYFISNP_nSS_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 80h
endm
;   SetCYFISNP_nSS_Data macro
macro SetCYFISNP_nSS_Data
	or		[Port_2_Data_SHADE], 80h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[CYFISNP_nSS_Data_ADDR], a
endm
;   ClearCYFISNP_nSS_Data macro
macro ClearCYFISNP_nSS_Data
	and		[Port_2_Data_SHADE], ~80h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[CYFISNP_nSS_Data_ADDR], a
endm


/*****************************************************************************
;;*****************************************************************************
;;  FILENAME:   ADC10.inc
;;  Version: 1.1, Updated on 2011/6/28 at 6:7:55
;;  Generated by PSoC Designer 5.4.3191
;;
;;  DESCRIPTION:
;;    Assembler declarations for the ACDINC12 user module interface.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
;;*****************************************************************************
;;****************************************************************************/
#ifndef ADC10_INCLUDE
#define ADC10_INCLUDE

#include <m8C.h>

// Function Fastcall Pragmas
#pragma fastcall16  ADC10_Start
#pragma fastcall16  ADC10_Stop
#pragma fastcall16  ADC10_StartADC
#pragma fastcall16  ADC10_StopADC
#pragma fastcall16  ADC10_fIsDataAvailable
#pragma fastcall16  ADC10_iGetData
#pragma fastcall16  ADC10_ClearFlag
#pragma fastcall16  ADC10_iGetDataClearFlag
#pragma fastcall16  ADC10_iCal


//-------------------------------------------------
// Prototypes of the ADC10 API.
//-------------------------------------------------
extern void ADC10_Start(BYTE bRange);
extern void ADC10_Stop(void);
extern void ADC10_StartADC(void);
extern void ADC10_StopADC(void);
extern BYTE ADC10_fIsDataAvailable(void);
extern int  ADC10_iGetData(void);
extern void ADC10_ClearFlag(void);
extern int  ADC10_iGetDataClearFlag(void);
extern int  ADC10_iCal(int iVal, BYTE bCalIn);


#define ADC10_LOWRANGE		0x01
#define ADC10_FULLRANGE  	0x03

#define ADC10_CAL_VBG		0x03
#define ADC10_CAL_AMUXBUS 	0x07
#define ADC10_CAL_P0_0		0x10
#define ADC10_CAL_P0_1		0x90
#define ADC10_CAL_P0_2		0x14
#define ADC10_CAL_P0_3		0x91
#define ADC10_CAL_P0_4		0x18
#define ADC10_CAL_P0_5		0x92
#define ADC10_CAL_P0_6		0x1C
#define ADC10_CAL_P0_7		0x93

// Counter Block Register Definitions
#pragma ioport  ADC10_ASE_CR0:  0x084
BYTE            ADC10_ASE_CR0;
#pragma ioport  ADC10_ACE_CR1:  0x076
BYTE            ADC10_ACE_CR1;
#pragma ioport  ADC10_ACE_CR2:  0x077
BYTE            ADC10_ACE_CR2;
#pragma ioport  ADC10_ADC_CR:   0x069
BYTE            ADC10_ADC_CR;
#pragma ioport  ADC10_ADC_TR:   0x1e6
BYTE            ADC10_ADC_TR;
 
// Counter Block Register Definitions
#pragma ioport  ADC10_CNT_FN:   0x120
BYTE            ADC10_CNT_FN;
#pragma ioport  ADC10_CNT_IN:   0x121
BYTE            ADC10_CNT_IN;
#pragma ioport  ADC10_CNT_OUT:  0x122
BYTE            ADC10_CNT_OUT;
#pragma ioport  ADC10_CNT_DR0:  0x020
BYTE            ADC10_CNT_DR0;
#pragma ioport  ADC10_CNT_DR1:  0x021
BYTE            ADC10_CNT_DR1;
#pragma ioport  ADC10_CNT_DR2:  0x022
BYTE            ADC10_CNT_DR2;
#pragma ioport  ADC10_CNT_CR0:  0x023
BYTE            ADC10_CNT_CR0;
   
#endif

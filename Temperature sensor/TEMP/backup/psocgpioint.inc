;  Generated by PSoC Designer 5.4.3191
;
; AnalogColumn_InputMUX_1 address and mask equates
AnalogColumn_InputMUX_1_Data_ADDR:	equ	0h
AnalogColumn_InputMUX_1_DriveMode_0_ADDR:	equ	100h
AnalogColumn_InputMUX_1_DriveMode_1_ADDR:	equ	101h
AnalogColumn_InputMUX_1_DriveMode_2_ADDR:	equ	3h
AnalogColumn_InputMUX_1_GlobalSelect_ADDR:	equ	2h
AnalogColumn_InputMUX_1_IntCtrl_0_ADDR:	equ	102h
AnalogColumn_InputMUX_1_IntCtrl_1_ADDR:	equ	103h
AnalogColumn_InputMUX_1_IntEn_ADDR:	equ	1h
AnalogColumn_InputMUX_1_MASK:	equ	1h
AnalogColumn_InputMUX_1_MUXBusCtrl_ADDR:	equ	1d8h
; AnalogColumn_InputMUX_0 address and mask equates
AnalogColumn_InputMUX_0_Data_ADDR:	equ	0h
AnalogColumn_InputMUX_0_DriveMode_0_ADDR:	equ	100h
AnalogColumn_InputMUX_0_DriveMode_1_ADDR:	equ	101h
AnalogColumn_InputMUX_0_DriveMode_2_ADDR:	equ	3h
AnalogColumn_InputMUX_0_GlobalSelect_ADDR:	equ	2h
AnalogColumn_InputMUX_0_IntCtrl_0_ADDR:	equ	102h
AnalogColumn_InputMUX_0_IntCtrl_1_ADDR:	equ	103h
AnalogColumn_InputMUX_0_IntEn_ADDR:	equ	1h
AnalogColumn_InputMUX_0_MASK:	equ	80h
AnalogColumn_InputMUX_0_MUXBusCtrl_ADDR:	equ	1d8h
; LED_BLUEPin address and mask equates
LED_BLUEPin_Data_ADDR:	equ	4h
LED_BLUEPin_DriveMode_0_ADDR:	equ	104h
LED_BLUEPin_DriveMode_1_ADDR:	equ	105h
LED_BLUEPin_DriveMode_2_ADDR:	equ	7h
LED_BLUEPin_GlobalSelect_ADDR:	equ	6h
LED_BLUEPin_IntCtrl_0_ADDR:	equ	106h
LED_BLUEPin_IntCtrl_1_ADDR:	equ	107h
LED_BLUEPin_IntEn_ADDR:	equ	5h
LED_BLUEPin_MASK:	equ	4h
LED_BLUEPin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_BLUEPin_Data access macros
;   GetLED_BLUEPin_Data macro, return in a
macro GetLED_BLUEPin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 4h
endm
;   SetLED_BLUEPin_Data macro
macro SetLED_BLUEPin_Data
	or		[Port_1_Data_SHADE], 4h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_BLUEPin_Data_ADDR], a
endm
;   ClearLED_BLUEPin_Data macro
macro ClearLED_BLUEPin_Data
	and		[Port_1_Data_SHADE], ~4h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_BLUEPin_Data_ADDR], a
endm

; LED_REDPin address and mask equates
LED_REDPin_Data_ADDR:	equ	4h
LED_REDPin_DriveMode_0_ADDR:	equ	104h
LED_REDPin_DriveMode_1_ADDR:	equ	105h
LED_REDPin_DriveMode_2_ADDR:	equ	7h
LED_REDPin_GlobalSelect_ADDR:	equ	6h
LED_REDPin_IntCtrl_0_ADDR:	equ	106h
LED_REDPin_IntCtrl_1_ADDR:	equ	107h
LED_REDPin_IntEn_ADDR:	equ	5h
LED_REDPin_MASK:	equ	8h
LED_REDPin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_REDPin_Data access macros
;   GetLED_REDPin_Data macro, return in a
macro GetLED_REDPin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 8h
endm
;   SetLED_REDPin_Data macro
macro SetLED_REDPin_Data
	or		[Port_1_Data_SHADE], 8h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_REDPin_Data_ADDR], a
endm
;   ClearLED_REDPin_Data macro
macro ClearLED_REDPin_Data
	and		[Port_1_Data_SHADE], ~8h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_REDPin_Data_ADDR], a
endm

; LED_GREENPin address and mask equates
LED_GREENPin_Data_ADDR:	equ	4h
LED_GREENPin_DriveMode_0_ADDR:	equ	104h
LED_GREENPin_DriveMode_1_ADDR:	equ	105h
LED_GREENPin_DriveMode_2_ADDR:	equ	7h
LED_GREENPin_GlobalSelect_ADDR:	equ	6h
LED_GREENPin_IntCtrl_0_ADDR:	equ	106h
LED_GREENPin_IntCtrl_1_ADDR:	equ	107h
LED_GREENPin_IntEn_ADDR:	equ	5h
LED_GREENPin_MASK:	equ	10h
LED_GREENPin_MUXBusCtrl_ADDR:	equ	1d9h
; LED_GREENPin_Data access macros
;   GetLED_GREENPin_Data macro, return in a
macro GetLED_GREENPin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 10h
endm
;   SetLED_GREENPin_Data macro
macro SetLED_GREENPin_Data
	or		[Port_1_Data_SHADE], 10h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_GREENPin_Data_ADDR], a
endm
;   ClearLED_GREENPin_Data macro
macro ClearLED_GREENPin_Data
	and		[Port_1_Data_SHADE], ~10h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[LED_GREENPin_Data_ADDR], a
endm

; EzI2CsSDA address and mask equates
EzI2CsSDA_Data_ADDR:	equ	4h
EzI2CsSDA_DriveMode_0_ADDR:	equ	104h
EzI2CsSDA_DriveMode_1_ADDR:	equ	105h
EzI2CsSDA_DriveMode_2_ADDR:	equ	7h
EzI2CsSDA_GlobalSelect_ADDR:	equ	6h
EzI2CsSDA_IntCtrl_0_ADDR:	equ	106h
EzI2CsSDA_IntCtrl_1_ADDR:	equ	107h
EzI2CsSDA_IntEn_ADDR:	equ	5h
EzI2CsSDA_MASK:	equ	20h
EzI2CsSDA_MUXBusCtrl_ADDR:	equ	1d9h
; EzI2CsSDA_Data access macros
;   GetEzI2CsSDA_Data macro, return in a
macro GetEzI2CsSDA_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 20h
endm
;   SetEzI2CsSDA_Data macro
macro SetEzI2CsSDA_Data
	or		[Port_1_Data_SHADE], 20h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[EzI2CsSDA_Data_ADDR], a
endm
;   ClearEzI2CsSDA_Data macro
macro ClearEzI2CsSDA_Data
	and		[Port_1_Data_SHADE], ~20h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[EzI2CsSDA_Data_ADDR], a
endm

; EzI2CsSCL address and mask equates
EzI2CsSCL_Data_ADDR:	equ	4h
EzI2CsSCL_DriveMode_0_ADDR:	equ	104h
EzI2CsSCL_DriveMode_1_ADDR:	equ	105h
EzI2CsSCL_DriveMode_2_ADDR:	equ	7h
EzI2CsSCL_GlobalSelect_ADDR:	equ	6h
EzI2CsSCL_IntCtrl_0_ADDR:	equ	106h
EzI2CsSCL_IntCtrl_1_ADDR:	equ	107h
EzI2CsSCL_IntEn_ADDR:	equ	5h
EzI2CsSCL_MASK:	equ	80h
EzI2CsSCL_MUXBusCtrl_ADDR:	equ	1d9h
; EzI2CsSCL_Data access macros
;   GetEzI2CsSCL_Data macro, return in a
macro GetEzI2CsSCL_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 80h
endm
;   SetEzI2CsSCL_Data macro
macro SetEzI2CsSCL_Data
	or		[Port_1_Data_SHADE], 80h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[EzI2CsSCL_Data_ADDR], a
endm
;   ClearEzI2CsSCL_Data macro
macro ClearEzI2CsSCL_Data
	and		[Port_1_Data_SHADE], ~80h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[EzI2CsSCL_Data_ADDR], a
endm

